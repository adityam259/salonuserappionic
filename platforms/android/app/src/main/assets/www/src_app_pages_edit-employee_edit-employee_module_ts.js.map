{"version":3,"file":"src_app_pages_edit-employee_edit-employee_module_ts.js","mappings":"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","sources":["./src/app/pages/edit-employee/edit-employee-routing.module.ts","./src/app/pages/edit-employee/edit-employee.module.ts","./src/app/pages/edit-employee/edit-employee.page.ts","./src/app/pages/edit-employee/edit-employee.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditEmployeePage } from './edit-employee.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditEmployeePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditEmployeePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditEmployeePageRoutingModule } from './edit-employee-routing.module';\n\nimport { EditEmployeePage } from './edit-employee.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EditEmployeePageRoutingModule\n  ],\n  declarations: [EditEmployeePage]\n})\nexport class EditEmployeePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RequestServiceService } from '../../services/request-service.service';\nimport { LoadingController } from '@ionic/angular';\nimport { AlertController } from '@ionic/angular';\nimport { NavController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-edit-employee',\n  templateUrl: './edit-employee.page.html',\n  styleUrls: ['./edit-employee.page.scss'],\n})\nexport class EditEmployeePage implements OnInit {\n  itemId: string;\n  message: any;\n  listOfHeaders: any;\n  formData = {\n    phoneNo: '',\n    userName: '',\n    firstName: '',\n    lastName:'',\n    address: '',\n    password: '',\n    emailId: '',\n    gender: '',\n    type: '',\n    id:''\n  };\n\n  constructor(private route: ActivatedRoute,\n    public loadingController: LoadingController\n    , private requestServiceService: RequestServiceService,\n    public alertController: AlertController,\n    private navCtrl: NavController) { }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.itemId = params['id'];\n    });\n    //alert(this.itemId);\n    this.getHeaderImageDetails(this.itemId);\n  }\n\n  async getHeaderImageDetails(id) {\n    const formData = new FormData();\n    formData.append('id', id);\n    this.presentLoading(); // show loader\n    this.requestServiceService.postHttpCall(\"getLoginData\", formData).subscribe((data: any) => {\n      if (data.status === 'SUCCESS') {\n        console.log(data);\n        //this.listOfHeaders = data.data;\n        this.formData.firstName = data.data.firstName;\n        this.formData.lastName = data.data.lastName;\n        this.formData.userName = data.data.userName;\n        this.formData.password = data.data.password;\n        this.formData.phoneNo = data.data.phoneNo;\n        this.formData.address = data.data.address;\n        this.formData.emailId = data.data.emailId;\n        this.formData.type = data.data.type;\n        this.formData.gender = data.data.gender;\n        this.formData.id=data.data.id;\n      } else {\n        console.log(data);\n        this.message = data.message;\n      }\n      this.loadingController.dismiss();\n\n    });\n\n  }\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      message: 'Loading Header Data...',\n      spinner: 'crescent'\n    });\n    await loading.present();\n  }\n\n  onSubmit() {\n    const formData = new FormData();\n    formData.append('userName', this.formData.userName);\n    formData.append('password', this.formData.password);\n    formData.append('gender', this.formData.gender);\n    formData.append('firstName', this.formData.firstName);\n    formData.append('lastName', this.formData.lastName);\n    formData.append('phoneNo', this.formData.phoneNo);\n    formData.append('address', this.formData.address);\n    formData.append('emailId', this.formData.emailId);\n    formData.append('type', this.formData.type);\n    formData.append('id', this.formData.id);\n    this.requestServiceService.postHttpCall(\"updateEmployeeUser\", formData).subscribe((data: any) => {\n      if (data.status === 'SUCCESS') {\n        console.log(data);\n        this.presentAlert(data.status, data.message);\n        this.goToOtherPage('tabs/tab1');\n      } else {\n        console.log(data);\n        this.presentAlert(data.status, data.message);\n        this.goToOtherPage('list-employee');\n      }\n    });\n\n\n  }\n\n\n  async presentAlert(status, message) {\n    const alert = await this.alertController.create({\n      header: status,\n      message: message,\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n  goToOtherPage(url) {\n    this.navCtrl.navigateForward(url);\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"tabs/tab1\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Edit Employee / User</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title></ion-card-title>\\n      <ion-card-subtitle></ion-card-subtitle>\\n    </ion-card-header>\\n  \\n    <ion-card-content>\\n      <form (ngSubmit)=\\\"onSubmit()\\\">\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"floating\\\">First Name</ion-label>\\n          <ion-input type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"formData.firstName\\\" required></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"floating\\\">Last Name</ion-label>\\n          <ion-input type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"formData.lastName\\\" required></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"floating\\\">Address</ion-label>\\n          <ion-input type=\\\"text\\\" name=\\\"address\\\" [(ngModel)]=\\\"formData.address\\\" required></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"floating\\\">User Name</ion-label>\\n          <ion-input type=\\\"text\\\" name=\\\"userName\\\" [(ngModel)]=\\\"formData.userName\\\" required></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"floating\\\">password</ion-label>\\n          <ion-input type=\\\"passsword\\\" name=\\\"password\\\" [(ngModel)]=\\\"formData.password\\\" required></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"floating\\\">Email Id</ion-label>\\n          <ion-input type=\\\"text\\\" name=\\\"emailId\\\" [(ngModel)]=\\\"formData.emailId\\\" required></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"floating\\\">Mobile No.</ion-label>\\n          <ion-input type=\\\"text\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"formData.phoneNo\\\" required></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"floating\\\">Gender</ion-label>\\n          <ion-select [(ngModel)]=\\\"formData.gender\\\" name=\\\"gender\\\" required>\\n            <ion-select-option [value]=\\\"male\\\">Male</ion-select-option>\\n            <ion-select-option [value]=\\\"feMale\\\">FeMale</ion-select-option>\\n          </ion-select>        \\n        </ion-item>\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"floating\\\">Type</ion-label>\\n          <ion-select [(ngModel)]=\\\"formData.type\\\" name=\\\"type\\\" required>\\n            <ion-select-option [value]=\\\"employee\\\">Employee</ion-select-option>\\n            <ion-select-option [value]=\\\"user\\\">User</ion-select-option>\\n          </ion-select>        \\n        </ion-item>\\n        <ion-row>\\n          <ion-col>\\n            <ion-button type=\\\"submit\\\" color=\\\"danger\\\" expand=\\\"block\\\">Submit</ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\\n\";"],"names":[],"sourceRoot":"webpack:///"}