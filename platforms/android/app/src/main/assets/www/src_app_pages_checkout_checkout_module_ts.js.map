{"version":3,"file":"src_app_pages_checkout_checkout_module_ts.js","mappings":"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","sources":["./src/app/pages/checkout/checkout-routing.module.ts","./src/app/pages/checkout/checkout.module.ts","./src/app/pages/checkout/checkout.page.ts","./src/app/pages/checkout/checkout.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CheckoutPage } from './checkout.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CheckoutPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CheckoutPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CheckoutPageRoutingModule } from './checkout-routing.module';\n\nimport { CheckoutPage } from './checkout.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CheckoutPageRoutingModule\n  ],\n  declarations: [CheckoutPage]\n})\nexport class CheckoutPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { StorageService } from '../../storage.service';\nimport { RequestServiceService } from '../../services/request-service.service';\nimport { AlertController } from '@ionic/angular';\nimport { NavController } from '@ionic/angular';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.page.html',\n  styleUrls: ['./checkout.page.scss'],\n})\nexport class CheckoutPage implements OnInit {\n  mobileNo: any;\n  timeSlotsData: any;\n  timeSlots: string[];\n\n\n  bookedtimeSlots: string[] = [\n    //'10:00 AM - 10:15 AM'\n  ];\n\n  formData = {\n    phoneNo: '',\n    userName: '',\n    firstName: '',\n    lastName: '',\n    emailId: '',\n    password: '',\n    address: '',\n    gender: ''\n  };\n\n  postFormData = {\n    userId: '',\n    productId: [],\n    totalAmount: '',\n    type: '',\n    orderTrackingId: '',\n    status: '',\n  };\n  selectedDate: string;\n  selectedTime: string;\n  message: any;\n  mobileData: any;\n  cartItems = [];\n  cartTotal: any;\n  total: any;\n  paymentMode: any;\n  buttonColor: string;\n  fontColor: string;\n  cancelationDeatils: any;\n  deliverNotify: any;\n\n  constructor(public storageService: StorageService,\n    public alertController: AlertController,\n    private requestServiceService: RequestServiceService,\n    private navCtrl: NavController) { }\n\n  ngOnInit() {\n    this.getSessionStorage();\n    this.getSessionStorageCart();\n    this.calculate(this.cartItems, this.cartTotal);\n    this.getCancelationDetailsData();\n    this.getAllTimeSlotsData();\n    this.getdeliverNotify();\n  }\n\n  selectTime(timeSlot: string) {\n    // Handle the selected time slot\n    console.log('Selected date:', moment(this.selectedDate).format('YYYY-MM-DD'));\n    console.log('Selected time:', timeSlot);\n    this.selectedTime = timeSlot;\n\n  }\n\n\n\n  isTimeSlotBooked(timeSlot: string): boolean {\n    return this.bookedtimeSlots.includes(timeSlot);\n  }\n\n  getSessionStorageCart() {\n    const storedCartItems = sessionStorage.getItem('cartItems');\n    const storedTotal = sessionStorage.getItem('total');\n    if (storedCartItems) {\n      this.cartItems = JSON.parse(storedCartItems);\n    }\n    if (storedTotal) {\n      this.cartTotal = JSON.parse(storedTotal);\n    }\n\n  }\n  getSessionStorage() {\n    this.storageService.get('mobileNo').then(result => {\n      if (result != null) {\n        console.log('Storage mobileNo & Pin: ' + result);\n        let separatedString = result.split('|');\n        this.mobileNo = separatedString[0];\n        this.formData.phoneNo = this.mobileNo;\n        this.getMobileData();\n      }\n    }).catch(e => {\n      console.log('error: ', e);\n    });\n  }\n\n  getAllTimeSlotsData() {\n    this.requestServiceService.getHttpCall(\"getAllTimeSlots\").subscribe((data: any) => {\n      if (data.status === 'SUCCESS') {\n        console.log(data);\n        this.timeSlotsData = data.data;\n        console.log(\"time slot data: \" + this.timeSlotsData);\n        this.timeSlots = this.timeSlotsData.map(obj => obj.timeSlot);\n        console.log(\"time slot data: \" + this.timeSlots);\n      }\n      else {\n        console.log(data);\n        this.message = data.message;\n      }\n    });\n  }\n\n  getCancelationDetailsData() {\n    this.requestServiceService.getHttpCall(\"fetchCancelationInstructions\").subscribe((data: any) => {\n      if (data.status === 'SUCCESS') {\n        console.log(data);\n        this.cancelationDeatils = data.data.cancelationInstruction;\n      }\n      else {\n        console.log(data);\n        this.message = data.message;\n      }\n    });\n  }\n\n  getMobileData() {\n    this.requestServiceService.postHttpCall(\"validateLoginUser\", this.formData).subscribe((data: any) => {\n      if (data.status === 'SUCCESS') {\n        console.log(data);\n        this.formData.firstName = data.data.firstName;\n        this.formData.lastName = data.data.lastName;\n        this.formData.address = data.data.address;\n        this.formData.emailId = data.data.emailId;\n        this.formData.gender = data.data.gender;\n        this.formData.phoneNo = data.data.phoneNo;\n        this.formData.userName = data.data.userName;\n        this.postFormData.userId = data.data.id;\n\n      }\n      else {\n        console.log(data);\n        this.message = data.message;\n      }\n    });\n  }\n\n  onPaymentMethodChange(value: string) {\n    this.paymentMode = value;\n  }\n\n  calculate(orders, totalValue) {\n    let prices = orders.map((item) => parseInt(item.price));\n    console.log(\"Price = \" + prices);\n    let total = prices.reduce((acc, curr) => acc + curr, 0);\n    console.log(\"total \" + total); // Output: 60\n    this.total = total;\n    this.total = totalValue;\n    sessionStorage.setItem('cartItems', JSON.stringify(orders));\n    this.postFormData.totalAmount = this.total;\n    var productIds = orders;\n    this.postFormData.productId = productIds;\n    console.log(\"=====>Checkout Place order\" + JSON.stringify(this.postFormData.productId));\n  }\n\n  placeOrder() {\n    const formData1 = new FormData();\n    formData1.append('userId', this.postFormData.userId);\n    formData1.append('productId', JSON.stringify(this.postFormData.productId));\n    formData1.append('status', \"pending\");\n    formData1.append('totalAmount', this.postFormData.totalAmount);\n    formData1.append('dateSeleted', moment(this.selectedDate).format('YYYY-MM-DD'));\n    formData1.append('timeSlot', this.selectedTime);\n    formData1.append('paymentMode', this.paymentMode);\n    formData1.append('deliverNotify', this.deliverNotify);\n    //deliverNotify\n    //formData1.append('type', this.postFormData.type);\n    //console.log(\"===> \"+formData1.get('productId'));\n    console.log(\"proceed checkout==> \" + formData1);\n    this.requestServiceService.postHttpCall(\"confirmOrder\", formData1).subscribe((data: any) => {\n      if (data.status === 'SUCCESS') {\n        console.log(data);\n        //clear the cart session object \n        this.storageService.remove('cartItems');\n        sessionStorage.removeItem('cartItems');\n\n        sessionStorage.setItem('mobileNo', this.mobileNo);\n\n        //show popup\n        this.presentAlert(data.status, data.message);\n        this.goToOtherPage('tabs/tab1');\n\n      } else {\n        console.log(data);\n        //show popup\n      }\n    });\n  }\n\n  async presentAlert(status, message) {\n    const alert = await this.alertController.create({\n      header: status,\n      message: message,\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n  getdeliverNotify() {\n    const value = sessionStorage.getItem('deliverNotify');\n    console.log(\"deliverNotify =\" + value);\n    this.deliverNotify = value;\n  }\n\n\n  goToOtherPage(url) {\n    this.navCtrl.navigateForward(url);\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"tabs/tab1\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>checkout</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n\\n    <ion-list>\\n      <ion-item>\\n        <ion-label>Name:</ion-label>\\n        <ion-input type=\\\"text\\\">{{formData.firstName}} {{formData.lastName}}</ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Email:</ion-label>\\n        <ion-input type=\\\"email\\\">{{formData.emailId}}</ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Mobile No:</ion-label>\\n        <ion-input type=\\\"text\\\">{{formData.phoneNo}}</ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label>Address:</ion-label>\\n        <ion-textarea>{{formData.address}}</ion-textarea>\\n      </ion-item>\\n\\n\\n    </ion-list>\\n  </ion-card>\\n  <ion-card style=\\\"background-color: bisque;border-color: rgb(250, 143, 12);\\\">\\n    <ion-card-content>\\n      <ion-label></ion-label>\\n      <p [innerHTML]=\\\"cancelationDeatils\\\"></p>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card>\\n    <ion-item>\\n      <ion-label>Select Date</ion-label>\\n    </ion-item>\\n    <br>\\n    <ion-datetime displayFormat=\\\"DD.MM.YYYY\\\" presentation=\\\"date\\\" [(ngModel)]=\\\"selectedDate\\\"\\n      style=\\\"background-color: white;\\\"></ion-datetime>\\n  </ion-card>\\n  <ion-card>\\n    <ion-item>\\n      <ion-label>Time</ion-label>\\n    </ion-item>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size=\\\"6\\\" *ngFor=\\\"let timeSlot of timeSlots\\\">\\n          <button  [ngStyle]=\\\"{'background-color': isTimeSlotBooked(timeSlot) ? '#e27171' : '',\\n          'color': isTimeSlotBooked(timeSlot) ? 'white' : '',\\n          'background-color.clicked': selectedTime === timeSlot ? 'green' : ''\\n        }\\\"\\n          [disabled]=\\\"isTimeSlotBooked(timeSlot)\\\"\\n          ion-button (click)=\\\"selectTime(timeSlot)\\\"\\n          [class.clicked]=\\\"selectedTime === timeSlot\\\"\\n            style=\\\"width: 100%;height: 30px;border-radius: 5px; box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);\\\"> {{ timeSlot }}</button>\\n\\n        </ion-col>\\n        \\n      </ion-row>\\n      <!-- Add more rows and columns for other time slots -->\\n    </ion-grid>\\n\\n  </ion-card>\\n  <ion-card>\\n    <ion-item>\\n      <ion-label>Payment Method:</ion-label>\\n      <ion-select (ionChange)=\\\"onPaymentMethodChange($event.target.value)\\\">\\n        <!--<ion-select-option value=\\\"credit-card\\\">Credit Card</ion-select-option>-->\\n        <ion-select-option value=\\\"cod\\\">COD</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n  </ion-card>\\n  <ion-card>\\n    <ion-card-content>\\n      <ion-label>Products :</ion-label>\\n      <ul>\\n        <li *ngFor=\\\"let item of cartItems; let i = index\\\">\\n          {{ i + 1 }}. &nbsp; {{ item.title }}\\n        </li>\\n      </ul>\\n      <table style=\\\"width:100%\\\">\\n        <tr>\\n          <td style=\\\"text-align: left;font-weight: bold;color: black;\\\"> Grand Total : </td>\\n          <td style=\\\"text-align: right;font-weight: bold;color: black;\\\"> &#x20b9; {{total}} </td>\\n        </tr>\\n      </table>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-button expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"placeOrder()\\\">Place Order</ion-button>\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}