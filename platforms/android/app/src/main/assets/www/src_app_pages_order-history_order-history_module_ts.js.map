{"version":3,"file":"src_app_pages_order-history_order-history_module_ts.js","mappings":"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","sources":["./src/app/pages/order-history/order-history-routing.module.ts","./src/app/pages/order-history/order-history.module.ts","./src/app/pages/order-history/order-history.page.ts","./src/app/pages/order-history/order-history.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrderHistoryPage } from './order-history.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderHistoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrderHistoryPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrderHistoryPageRoutingModule } from './order-history-routing.module';\n\nimport { OrderHistoryPage } from './order-history.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OrderHistoryPageRoutingModule\n  ],\n  declarations: [OrderHistoryPage]\n})\nexport class OrderHistoryPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { RequestServiceService } from '../../services/request-service.service';\nimport { AlertController } from '@ionic/angular';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\nimport { StorageService } from '../../storage.service';\n\n@Component({\n  selector: 'app-order-history',\n  templateUrl: './order-history.page.html',\n  styleUrls: ['./order-history.page.scss'],\n})\nexport class OrderHistoryPage implements OnInit {\n  message: any;\n  currentOrders: string = 'ongoing'; \n  listOfHeadersPending: any[] = []; // Replace with your actual data array\n  listOfHeadersCompleted: any[] = []; // Replace with your actual data array\n  mobileNo:any;\n  constructor(private requestServiceService: RequestServiceService,\n    public alertController: AlertController,\n    private router: Router,\n    public loadingController: LoadingController,\n    public storageService: StorageService) { }\n\n  async ngOnInit() {\n    await this.getSessionStorage();\n  }\n\n  showOngoingOrders(){\n    this.currentOrders=\"ongoing\";\n  }\n  showPastOrders(){\n    this.currentOrders=\"past\";\n  }\n  async getOrderHistoryPending(mobile) {\n    console.log(mobile);\n    const formData = new FormData();\n    formData.append('mobileNumber', mobile);\n    const loading = await this.presentLoading(); // show loader\n    try {\n      const data: any = await  this.requestServiceService.postHttpCall(\"getOrderHistoryPending\",formData).toPromise();\n      if (data.status === 'SUCCESS') {\n        this.listOfHeadersPending = data.data;\n      } else {\n        this.message = data.message;\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      if (loading) {\n        loading.dismiss(); // hide loader\n      }\n    }\n  }\n\n  async getOrderHistoryCompleted(mobile) {\n    console.log(mobile);\n    const formData = new FormData();\n    formData.append('mobileNumber', mobile);\n    const loading = await this.presentLoading(); // show loader\n    try {\n      const data: any = await  this.requestServiceService.postHttpCall(\"getOrderHistoryCompleted\",formData).toPromise();\n      if (data.status === 'SUCCESS') {\n        this.listOfHeadersCompleted = data.data;\n      } else {\n        this.message = data.message;\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      if (loading) {\n        loading.dismiss(); // hide loader\n      }\n    }\n  }\n  \n  async getSessionStorage(){\n    await this.storageService.get('mobileNo').then(result => {\n      if (result != null) {\n      let separatedString = result.split('|');\n      this.mobileNo = separatedString[0];\n      this.getOrderHistoryCompleted(this.mobileNo);\n      this.getOrderHistoryPending(this.mobileNo);\n      \n      }\n      }).catch(e => {\n      console.log('error: ', e);\n      });\n  }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      message: 'Loading...',\n      spinner: 'dots',\n      translucent: true,\n      backdropDismiss: false\n    });\n    await loading.present();\n    return loading;\n  }\n\n  rowClicked(itemId: string) {\n    const navigationExtras: NavigationExtras = {\n      queryParams: {\n        id: itemId\n      }\n    };\n    this.router.navigate(['order-history'], navigationExtras);\n  }\n\n  doRefresh(event) {\n    // Perform data fetching or processing here\n    this.getSessionStorage();\n     setTimeout(() => {\n      // Any calls to load data go here\n      event.target.complete();\n    }, 2000);\n  };\n  \n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"tabs/tab1\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Orders</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n\\n  <div class=\\\"main-content\\\" style=\\\"width: 100%;\\\">\\n    <div class=\\\"switch-buttons\\\" style=\\\"width: 100%;\\\">\\n      <button ion-button (click)=\\\"showOngoingOrders()\\\" style=\\\"width: 50%;height: 40px; font-weight: bold;\\\">Ongoing Orders</button>\\n      <button ion-button (click)=\\\"showPastOrders()\\\" style=\\\"width: 50%;height: 40px;font-weight: bold;\\\">Past Orders</button>\\n    </div>\\n\\n    <ion-row *ngIf=\\\"currentOrders === 'ongoing'\\\">\\n      <div class=\\\"main-content\\\" *ngIf=\\\"listOfHeadersPending!=null\\\">\\n        <div *ngFor=\\\"let item of listOfHeadersPending\\\" class=\\\"bookings\\\">\\n          <ion-row style=\\\"padding-bottom: 10px; border-bottom: 1px solid lightgray;\\\">\\n            <ion-col size=\\\"4\\\">\\n              <img src=\\\"{{item.frontEndBase64 }}\\\"/>\\n            </ion-col>\\n            <ion-col size=\\\"8\\\">\\n              <table class=\\\"order-details-table\\\">\\n                <tr>\\n                  <td><b>Title:</b></td>\\n                  <td>&nbsp;{{ item.title }}</td>\\n                </tr>\\n                <tr>\\n                  <td><b>Order Id:</b></td>\\n                  <td>&nbsp;{{ item.orderTrackingId }}</td>\\n                </tr>\\n                <tr>\\n                  <td><b>Amount:</b></td>\\n                  <td>&nbsp;<b>&#8377;</b>{{ item.totalAmount }}</td>\\n                </tr>\\n                <tr>\\n                  <td><b>Quantity:</b></td>\\n                  <td>&nbsp; {{ item.quantity }}</td>\\n                </tr>\\n                <tr *ngIf=\\\"item.status === 'pending'\\\">\\n                  <td><b>Status:</b></td>\\n                  <td>&nbsp;<b style=\\\"color: blue;\\\">Pending</b></td>\\n                </tr>\\n                <tr>\\n                  <td colspan=\\\"2\\\" class=\\\"order-again-cell\\\">\\n                  <!--  <button ion-button color=\\\"primary\\\" (click)=\\\"orderAgain(item)\\\">Order Again</button>\\n                    -->\\n                  </td>\\n                </tr>\\n              </table>\\n            </ion-col>\\n          </ion-row>   \\n        </div>\\n      </div>\\n      <div class=\\\"main-content\\\" *ngIf=\\\"listOfHeadersPending === null || listOfHeadersPending.length === 0\\\">\\n        <h5 style=\\\"position: absolute;\\n        top: 50%;\\n        left: 50%;\\n        transform: translate(-50%, -50%);\\\">No Orders Avaialble</h5>\\n      </div>\\n    </ion-row>\\n\\n    <ion-row *ngIf=\\\"currentOrders === 'past'\\\">\\n      <div class=\\\"main-content\\\" *ngIf=\\\"listOfHeadersCompleted!=null\\\">\\n        <div *ngFor=\\\"let item of listOfHeadersCompleted\\\" class=\\\"bookings\\\">\\n          <ion-row style=\\\"padding-bottom: 10px; border-bottom: 1px solid lightgray;\\\">\\n            <ion-col size=\\\"4\\\">\\n              <img src=\\\"{{item.frontEndBase64 }}\\\"/>\\n            </ion-col>\\n            <ion-col size=\\\"8\\\">\\n              <table class=\\\"order-details-table\\\">\\n                <tr>\\n                  <td><b>Title:</b></td>\\n                  <td>&nbsp;{{ item.title }}</td>\\n                </tr>\\n                <tr>\\n                  <td><b>Order Id:</b></td>\\n                  <td>&nbsp;{{ item.orderTrackingId }}</td>\\n                </tr>\\n                <tr>\\n                  <td><b>Amount:</b></td>\\n                  <td>&nbsp;<b>&#8377;</b>{{ item.totalAmount }}</td>\\n                </tr>\\n                <tr>\\n                  <td><b>Quantity:</b></td>\\n                  <td>&nbsp; {{ item.quantity }}</td>\\n                </tr>\\n                <tr *ngIf=\\\"item.status === 'completed'\\\">\\n                  <td><b>Status:</b></td>\\n                  <td>&nbsp;<b style=\\\"color: blue;\\\">Completed</b></td>\\n                </tr>\\n              </table>\\n            </ion-col>\\n          </ion-row>   \\n        </div>\\n      </div>\\n      <div class=\\\"main-content\\\" *ngIf=\\\"listOfHeadersCompleted === null || listOfHeadersCompleted.length === 0\\\">\\n        <h5 style=\\\"position: absolute;\\n        top: 50%;\\n        left: 50%;\\n        transform: translate(-50%, -50%);\\\">No Orders Avaialble</h5>\\n      </div>\\n    </ion-row>\\n\\n    <div class=\\\"main-content\\\" *ngIf=\\\"listOfHeadersPending === null || listOfHeadersPending.length === 0\\\">\\n      {{ message }}\\n    </div>\\n\\n    \\n  </div>\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}